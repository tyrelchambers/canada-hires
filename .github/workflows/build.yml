name: Build Frontend and Backend

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master, develop]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      frontend-changed: ${{ steps.changes.outputs.frontend }}
      backend-changed: ${{ steps.changes.outputs.backend }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect file changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            frontend:
              - 'web/**'
              - 'package-lock.json'
            backend:
              - 'api/**'
              - '!api/scraper/**'

  docker-frontend:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend-changed == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push frontend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./web
          file: ./web/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/frontend:latest
            ghcr.io/${{ github.repository }}/frontend:${{ github.sha }}

  docker-backend:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.backend-changed == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./api
          file: ./api/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/backend:latest
            ghcr.io/${{ github.repository }}/backend:${{ github.sha }}

  build-complete:
    runs-on: ubuntu-latest
    needs: [detect-changes, docker-frontend, docker-backend]
    if: always()
    steps:
      - name: Check build status
        run: |
          if [[ "${{ needs.detect-changes.outputs.frontend-changed }}" == "true" && "${{ needs.docker-frontend.result }}" != "success" ]]; then
            echo "Frontend Docker build failed"
            exit 1
          fi
          if [[ "${{ needs.detect-changes.outputs.backend-changed }}" == "true" && "${{ needs.docker-backend.result }}" != "success" ]]; then
            echo "Backend Docker build failed"
            exit 1
          fi
          echo "All applicable Docker builds completed successfully"
