/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LmiaRouteImport } from './routes/lmia'
import { Route as JobsRouteImport } from './routes/jobs'
import { Route as DirectoryRouteImport } from './routes/directory'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthLoginRouteImport } from './routes/auth/login'

const LmiaRoute = LmiaRouteImport.update({
  id: '/lmia',
  path: '/lmia',
  getParentRoute: () => rootRouteImport,
} as any)
const JobsRoute = JobsRouteImport.update({
  id: '/jobs',
  path: '/jobs',
  getParentRoute: () => rootRouteImport,
} as any)
const DirectoryRoute = DirectoryRouteImport.update({
  id: '/directory',
  path: '/directory',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/directory': typeof DirectoryRoute
  '/jobs': typeof JobsRoute
  '/lmia': typeof LmiaRoute
  '/auth/login': typeof AuthLoginRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/directory': typeof DirectoryRoute
  '/jobs': typeof JobsRoute
  '/lmia': typeof LmiaRoute
  '/auth/login': typeof AuthLoginRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/directory': typeof DirectoryRoute
  '/jobs': typeof JobsRoute
  '/lmia': typeof LmiaRoute
  '/auth/login': typeof AuthLoginRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/directory' | '/jobs' | '/lmia' | '/auth/login'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/directory' | '/jobs' | '/lmia' | '/auth/login'
  id: '__root__' | '/' | '/directory' | '/jobs' | '/lmia' | '/auth/login'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DirectoryRoute: typeof DirectoryRoute
  JobsRoute: typeof JobsRoute
  LmiaRoute: typeof LmiaRoute
  AuthLoginRoute: typeof AuthLoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/lmia': {
      id: '/lmia'
      path: '/lmia'
      fullPath: '/lmia'
      preLoaderRoute: typeof LmiaRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/jobs': {
      id: '/jobs'
      path: '/jobs'
      fullPath: '/jobs'
      preLoaderRoute: typeof JobsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/directory': {
      id: '/directory'
      path: '/directory'
      fullPath: '/directory'
      preLoaderRoute: typeof DirectoryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DirectoryRoute: DirectoryRoute,
  JobsRoute: JobsRoute,
  LmiaRoute: LmiaRoute,
  AuthLoginRoute: AuthLoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
