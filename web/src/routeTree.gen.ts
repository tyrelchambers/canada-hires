/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LmiaRouteImport } from './routes/lmia'
import { Route as JobsRouteImport } from './routes/jobs'
import { Route as FeedbackRouteImport } from './routes/feedback'
import { Route as DirectoryRouteImport } from './routes/directory'
import { Route as AdminRouteImport } from './routes/admin'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ResearchIndexRouteImport } from './routes/research/index'
import { Route as ResearchWageSubsidiesImmigrantsRouteImport } from './routes/research/wage-subsidies-immigrants'
import { Route as ReportsCreateRouteImport } from './routes/reports/create'
import { Route as AuthLoginRouteImport } from './routes/auth/login'

const LmiaRoute = LmiaRouteImport.update({
  id: '/lmia',
  path: '/lmia',
  getParentRoute: () => rootRouteImport,
} as any)
const JobsRoute = JobsRouteImport.update({
  id: '/jobs',
  path: '/jobs',
  getParentRoute: () => rootRouteImport,
} as any)
const FeedbackRoute = FeedbackRouteImport.update({
  id: '/feedback',
  path: '/feedback',
  getParentRoute: () => rootRouteImport,
} as any)
const DirectoryRoute = DirectoryRouteImport.update({
  id: '/directory',
  path: '/directory',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ResearchIndexRoute = ResearchIndexRouteImport.update({
  id: '/research/',
  path: '/research/',
  getParentRoute: () => rootRouteImport,
} as any)
const ResearchWageSubsidiesImmigrantsRoute =
  ResearchWageSubsidiesImmigrantsRouteImport.update({
    id: '/research/wage-subsidies-immigrants',
    path: '/research/wage-subsidies-immigrants',
    getParentRoute: () => rootRouteImport,
  } as any)
const ReportsCreateRoute = ReportsCreateRouteImport.update({
  id: '/reports/create',
  path: '/reports/create',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/directory': typeof DirectoryRoute
  '/feedback': typeof FeedbackRoute
  '/jobs': typeof JobsRoute
  '/lmia': typeof LmiaRoute
  '/auth/login': typeof AuthLoginRoute
  '/reports/create': typeof ReportsCreateRoute
  '/research/wage-subsidies-immigrants': typeof ResearchWageSubsidiesImmigrantsRoute
  '/research': typeof ResearchIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/directory': typeof DirectoryRoute
  '/feedback': typeof FeedbackRoute
  '/jobs': typeof JobsRoute
  '/lmia': typeof LmiaRoute
  '/auth/login': typeof AuthLoginRoute
  '/reports/create': typeof ReportsCreateRoute
  '/research/wage-subsidies-immigrants': typeof ResearchWageSubsidiesImmigrantsRoute
  '/research': typeof ResearchIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/directory': typeof DirectoryRoute
  '/feedback': typeof FeedbackRoute
  '/jobs': typeof JobsRoute
  '/lmia': typeof LmiaRoute
  '/auth/login': typeof AuthLoginRoute
  '/reports/create': typeof ReportsCreateRoute
  '/research/wage-subsidies-immigrants': typeof ResearchWageSubsidiesImmigrantsRoute
  '/research/': typeof ResearchIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/directory'
    | '/feedback'
    | '/jobs'
    | '/lmia'
    | '/auth/login'
    | '/reports/create'
    | '/research/wage-subsidies-immigrants'
    | '/research'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/directory'
    | '/feedback'
    | '/jobs'
    | '/lmia'
    | '/auth/login'
    | '/reports/create'
    | '/research/wage-subsidies-immigrants'
    | '/research'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/directory'
    | '/feedback'
    | '/jobs'
    | '/lmia'
    | '/auth/login'
    | '/reports/create'
    | '/research/wage-subsidies-immigrants'
    | '/research/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRoute
  DirectoryRoute: typeof DirectoryRoute
  FeedbackRoute: typeof FeedbackRoute
  JobsRoute: typeof JobsRoute
  LmiaRoute: typeof LmiaRoute
  AuthLoginRoute: typeof AuthLoginRoute
  ReportsCreateRoute: typeof ReportsCreateRoute
  ResearchWageSubsidiesImmigrantsRoute: typeof ResearchWageSubsidiesImmigrantsRoute
  ResearchIndexRoute: typeof ResearchIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/lmia': {
      id: '/lmia'
      path: '/lmia'
      fullPath: '/lmia'
      preLoaderRoute: typeof LmiaRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/jobs': {
      id: '/jobs'
      path: '/jobs'
      fullPath: '/jobs'
      preLoaderRoute: typeof JobsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/feedback': {
      id: '/feedback'
      path: '/feedback'
      fullPath: '/feedback'
      preLoaderRoute: typeof FeedbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/directory': {
      id: '/directory'
      path: '/directory'
      fullPath: '/directory'
      preLoaderRoute: typeof DirectoryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/research/': {
      id: '/research/'
      path: '/research'
      fullPath: '/research'
      preLoaderRoute: typeof ResearchIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/research/wage-subsidies-immigrants': {
      id: '/research/wage-subsidies-immigrants'
      path: '/research/wage-subsidies-immigrants'
      fullPath: '/research/wage-subsidies-immigrants'
      preLoaderRoute: typeof ResearchWageSubsidiesImmigrantsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reports/create': {
      id: '/reports/create'
      path: '/reports/create'
      fullPath: '/reports/create'
      preLoaderRoute: typeof ReportsCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRoute,
  DirectoryRoute: DirectoryRoute,
  FeedbackRoute: FeedbackRoute,
  JobsRoute: JobsRoute,
  LmiaRoute: LmiaRoute,
  AuthLoginRoute: AuthLoginRoute,
  ReportsCreateRoute: ReportsCreateRoute,
  ResearchWageSubsidiesImmigrantsRoute: ResearchWageSubsidiesImmigrantsRoute,
  ResearchIndexRoute: ResearchIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
